<UserControl x:Class="ComicReader.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ComicReader.Views"
             xmlns:conv="clr-namespace:ComicReader.Converters"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
             
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary />
            </ResourceDictionary.MergedDictionaries>
            <!-- Converters -->
            <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
            <conv:NullToCollapsedConverter x:Key="NullToCollapsedConverter" />
            
            <!-- ===== Estilos mínimos para Recientes (limpios y discretos) ===== -->
            <SolidColorBrush x:Key="RecentsAccent" Color="#3B82F6"/>
            <SolidColorBrush x:Key="RecentsAccentDark" Color="#2563EB"/>
            <SolidColorBrush x:Key="RecentsDanger" Color="#EF4444"/>
            <SolidColorBrush x:Key="RecentsDangerDark" Color="#DC2626"/>
            <SolidColorBrush x:Key="RecentsText" Color="#F9FAFB"/>
            <SolidColorBrush x:Key="RecentsSubtle" Color="#E5E7EB"/>
            <SolidColorBrush x:Key="RecentsCardBg" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="RecentsCardBorder" Color="#E5E7EB"/>

            <!-- Botón base discreto -->
            <Style x:Key="RecentsButton" TargetType="Button">
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="6,0"/>
                <Setter Property="Foreground" Value="#111827"/>
                <Setter Property="Background" Value="#F3F4F6"/>
                <Setter Property="BorderBrush" Value="#D1D5DB"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#E5E7EB"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Botón primario -->
            <Style x:Key="RecentsPrimaryButton" TargetType="Button" BasedOn="{StaticResource RecentsButton}">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="{StaticResource RecentsAccent}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RecentsAccentDark}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4F83F7"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Botón peligro -->
            <Style x:Key="RecentsDangerButton" TargetType="Button" BasedOn="{StaticResource RecentsButton}">
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="{StaticResource RecentsDanger}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RecentsDangerDark}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F87171"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Tarjeta simple (más discreta en panel oscuro) -->
            <Style x:Key="RecentsCard" TargetType="Border">
                <Setter Property="Background" Value="#FAFFFFFF"/>
                <Setter Property="BorderBrush" Value="#E6EAF0"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="6" ShadowDepth="1" Opacity="0.06" Color="#000000"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#BFD3FF"/>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="2" Opacity="0.10" Color="#000000"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.01" ScaleY="1.01"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Chip buttons (discretos) -->
            <Style x:Key="ChipButton" TargetType="Button" BasedOn="{StaticResource RecentsButton}">
                <Setter Property="Background" Value="#14FFFFFF"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="BorderBrush" Value="#33FFFFFF"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="6,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="16">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#22FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ChipButtonDanger" TargetType="Button" BasedOn="{StaticResource ChipButton}">
                <Setter Property="Background" Value="#26EF4444"/>
                <Setter Property="BorderBrush" Value="#3DEF4444"/>
            </Style>

            <!-- ToggleButton style matching ChipButton visual to use as tab toggles -->
            <Style x:Key="ChipToggleButton" TargetType="ToggleButton">
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="6,0"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Background" Value="#14FFFFFF"/>
                <Setter Property="BorderBrush" Value="#33FFFFFF"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="16">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="#22FFFFFF"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="bd" Property="Background" Value="#3B82F6"/>
                                    <Setter Property="Foreground" Value="#FFFFFF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Estilos de vista lista -->
            <Style x:Key="RecentsListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="Padding" Value="6"/>
                <Setter Property="Margin" Value="2,1"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#E6ECF8"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <!-- Quitar borde de enfoque que aparece como barra al seleccionar -->
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <!-- Menú contextual por elemento -->
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Header="Leer"
                                      Command="{Binding DataContext.OpenComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding FilePath}"/>
                            <MenuItem Header="Mostrar en carpeta"
                                      Command="{Binding DataContext.ShowInFolderCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding FilePath}"/>
                            <Separator/>
                            <MenuItem Header="Quitar de la lista" Foreground="#FCA5A5"
                                      Command="{Binding DataContext.RemoveRecentComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding FilePath}"/>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#14253A"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#1E3A8A"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RecentsGridHeader" TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="#1F2B45"/>
                <Setter Property="Foreground" Value="#E6ECF8"/>
                <Setter Property="BorderBrush" Value="#263146"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="6,4"/>
            </Style>

            <!-- Botones de texto (transparentes) -->
            <Style x:Key="TextActionButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Margin" Value="8,0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#14FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TextDangerButton" TargetType="Button" BasedOn="{StaticResource TextActionButton}">
                <Setter Property="Foreground" Value="#FCA5A5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#1AEF4444"/>
                        <Setter Property="Foreground" Value="#FFFFFF"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Botón de icono fantasma (circular, discreto) -->
            <Style x:Key="GhostIconButton" TargetType="Button">
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="#E6ECF8"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="root" CornerRadius="14" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="root" Property="Background" Value="#14253A"/>
                                    <Setter TargetName="root" Property="BorderBrush" Value="#263146"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="root" Property="Background" Value="#1B2E4A"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Botón de navegación para carrusel -->
            <Style x:Key="CarouselNavButton" TargetType="Button">
                <Setter Property="Width" Value="42"/>
                <Setter Property="Height" Value="42"/>
                <Setter Property="Background" Value="#33000000"/>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
                <Setter Property="BorderBrush" Value="#55FFFFFF"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="root" CornerRadius="21" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="root" Property="Background" Value="#55000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Contenedor y fondo propio para la sección de Recientes -->
            <SolidColorBrush x:Key="RecentsPanelBackgroundBrush" Color="#FF162238"/>
            <SolidColorBrush x:Key="RecentsPanelBorderBrush" Color="#44FFFFFF"/>
            
            <Style x:Key="RecentsSectionContainer" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource RecentsPanelBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RecentsPanelBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="14" ShadowDepth="2" Opacity="0.10" Color="#000000"/>
                    </Setter.Value>
                </Setter>
            </Style>
        <!-- Visibilidad del panel vacío: visible solo cuando NO hay recientes -->
        <Style x:Key="EmptyStateVisibilityStyle" TargetType="Border">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasRecentComics}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
    </Style>
        <!-- Estilos de Cómic -->
        <LinearGradientBrush x:Key="ComicBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF0F172A" Offset="0"/>
            <GradientStop Color="#FF1F2A44" Offset="0.35"/>
            <GradientStop Color="#FF1E3A8A" Offset="0.7"/>
            <GradientStop Color="#FF3B82F6" Offset="1"/>
        </LinearGradientBrush>
        
        <RadialGradientBrush x:Key="HalftonePattern" Center="0.3,0.3" RadiusX="0.9" RadiusY="0.9">
            <GradientStop Color="#15FFFFFF" Offset="0"/>
            <GradientStop Color="#25FFFFFF" Offset="0.25"/>
            <GradientStop Color="#10FFFFFF" Offset="0.6"/>
            <GradientStop Color="#20FFFFFF" Offset="1"/>
        </RadialGradientBrush>

        <!-- Rayos tipo estallido (Starburst) -->
        <DrawingBrush x:Key="StarburstBrush" ViewportUnits="Absolute" TileMode="Tile" Viewport="0,0,64,64" Stretch="None">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="#12FFFFFF">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <GeometryGroup.Children>
                                    <LineGeometry StartPoint="32,0" EndPoint="32,64"/>
                                    <LineGeometry StartPoint="0,32" EndPoint="64,32"/>
                                    <LineGeometry StartPoint="10,10" EndPoint="54,54"/>
                                    <LineGeometry StartPoint="54,10" EndPoint="10,54"/>
                                </GeometryGroup.Children>
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        
        <LinearGradientBrush x:Key="SpeechBubbleBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFF8FAFC" Offset="1"/>
        </LinearGradientBrush>
        
        <Style x:Key="ComicTitleStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Impact, Arial Black, Arial"/>
            <Setter Property="FontSize" Value="48"/>
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        
        <Style x:Key="SoundEffectStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Impact, Arial Black"/>
            <Setter Property="FontWeight" Value="Black"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        
        <Style x:Key="SpeechBubbleStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource SpeechBubbleBrush}"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Padding" Value="20,12"/>
        </Style>
        
        <Style x:Key="ComicButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Comic Sans MS, cursive"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Panel estilo viñeta -->
        <Style x:Key="VignettePanelStyle" TargetType="Border">
            <Setter Property="Background" Value="#FFFDFDFD"/>
            <Setter Property="BorderBrush" Value="#111111"/>
            <Setter Property="BorderThickness" Value="6"/>
            <Setter Property="CornerRadius" Value="18"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <!-- Cinta de título en viñeta -->
        <Style x:Key="VignetteRibbonStyle" TargetType="Border">
            <Setter Property="Background" Value="#111111"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <!-- Fondo de Cómic con Efectos -->
    <Grid>
        <!-- Fondo Principal -->
        <Rectangle Fill="{StaticResource ComicBackgroundBrush}"/>
        
    <!-- Patrón de Semitono -->
    <Rectangle Fill="{StaticResource HalftonePattern}" Opacity="0.5"/>
    <!-- Rayos Starburst sutiles -->
    <Rectangle Fill="{StaticResource StarburstBrush}" Opacity="0.25"/>
        
        <!-- Elementos Decorativos de Cómic -->
        <Canvas>
            <!-- Efecto POW! -->
            <Border Canvas.Right="50" Canvas.Top="30" 
                    Background="#FFFF6B00" BorderBrush="#FFFF4500" BorderThickness="4"
                    CornerRadius="20" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <RotateTransform Angle="15"/>
                </Border.RenderTransform>
                <TextBlock Text="POW!" Style="{StaticResource SoundEffectStyle}"
                           FontSize="28" Foreground="White" Margin="15,8"/>
            </Border>
            
            <!-- Efecto BAM! -->
            <Border Canvas.Left="80" Canvas.Bottom="120" 
                    Background="#FF00B4D8" BorderBrush="#FF0077B6" BorderThickness="4"
                    CornerRadius="25" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <RotateTransform Angle="-20"/>
                </Border.RenderTransform>
                <TextBlock Text="BAM!" Style="{StaticResource SoundEffectStyle}"
                           FontSize="24" Foreground="White" Margin="12,6"/>
            </Border>
            
            <!-- Efecto ZOOM! -->
            <Border Canvas.Right="120" Canvas.Bottom="80" 
                    Background="#FFFF006E" BorderBrush="#FFD90429" BorderThickness="4"
                    CornerRadius="30" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <RotateTransform Angle="25"/>
                </Border.RenderTransform>
                <TextBlock Text="ZOOM!" Style="{StaticResource SoundEffectStyle}"
                           FontSize="20" Foreground="White" Margin="10,5"/>
            </Border>
            
            <!-- Estrella Decorativa -->
            <Path Canvas.Left="200" Canvas.Top="60" Fill="#FFFFD60A" Stroke="#FFFF8500" StrokeThickness="2"
                  Data="M 50,0 L 61,35 L 98,35 L 68,57 L 79,91 L 50,70 L 21,91 L 32,57 L 2,35 L 39,35 Z"
                  RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <RotateTransform x:Name="StarRotation"/>
                </Path.RenderTransform>
                <Path.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation Storyboard.TargetName="StarRotation" 
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0" To="360" Duration="0:0:10"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Path.Triggers>
            </Path>
        </Canvas>
        
    <!-- Contenido Principal (ahora desplazable verticalmente) -->
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" PanningMode="VerticalOnly">
    <Grid Margin="40">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Hero + Menú de Viñetas -->
            <StackPanel Grid.Row="0" HorizontalAlignment="Center" Margin="0,20,0,30">
                <TextBlock Text="PERCY'S LIBRARY" Style="{StaticResource ComicTitleStyle}" Margin="0,0,0,10"/>
                <Border Style="{StaticResource SpeechBubbleStyle}" HorizontalAlignment="Center" Margin="0,0,0,24">
                    <TextBlock Text="¡Tu aventura de lectura comienza aquí!" 
                               FontFamily="Comic Sans MS" FontSize="18" FontWeight="Bold"
                               Foreground="#FF1E293B" TextAlignment="Center"/>
                </Border>

                <!-- Paneles tipo viñetas (sin duplicados) -->
                <UniformGrid Columns="2" HorizontalAlignment="Center">
                    <!-- Abrir archivo -->
                    <Border Style="{StaticResource VignettePanelStyle}">
                        <StackPanel>
                            <Border Style="{StaticResource VignetteRibbonStyle}">
                                <TextBlock Text="ARCHIVO" Foreground="#FFFFFF" FontFamily="Impact" FontSize="14"/>
                            </Border>
                            <Button Style="{StaticResource ComicButtonStyle}"
                                    Background="#FF10B981" BorderBrush="#FF059669" Foreground="White"
                                    Click="OpenFile_Click" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="📁" FontSize="20" Margin="0,0,8,0"/>
                                    <TextBlock Text="ABRIR ARCHIVO"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource ComicButtonStyle}"
                                    Background="#FF8B5CF6" BorderBrush="#FF7C3AED" Foreground="White"
                                    Click="EnterReadingMode_Click" HorizontalAlignment="Stretch" Margin="0,8,0,0">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="📖" FontSize="20" Margin="0,0,8,0"/>
                                    <TextBlock Text="MODO LECTURA"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>

                    <!-- Abrir carpeta -->
                    <Border Style="{StaticResource VignettePanelStyle}">
                        <StackPanel>
                            <Border Style="{StaticResource VignetteRibbonStyle}">
                                <TextBlock Text="CARPETA" Foreground="#FFFFFF" FontFamily="Impact" FontSize="14"/>
                            </Border>
                            <Button Style="{StaticResource ComicButtonStyle}"
                                    Background="#FF3B82F6" BorderBrush="#FF1D4ED8" Foreground="White"
                                    Click="OpenFolder_Click" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="📂" FontSize="20" Margin="0,0,8,0"/>
                                    <TextBlock Text="EXPLORAR CARPETA…"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>

                    

                    <!-- Favoritos -->
                    <Border Style="{StaticResource VignettePanelStyle}">
                        <StackPanel>
                            <Border Style="{StaticResource VignetteRibbonStyle}">
                                <TextBlock Text="FAVORITOS" Foreground="#FFFFFF" FontFamily="Impact" FontSize="14"/>
                            </Border>
                            <Button Style="{StaticResource ComicButtonStyle}"
                                    Background="#FFEC4899" BorderBrush="#FFDB2777" Foreground="White"
                                    Click="OpenFavorites_Click" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="⭐" FontSize="18" Margin="0,0,6,0"/>
                                    <TextBlock Text="COLECCIONES"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>

                    <!-- Estadísticas -->
                    <Border Style="{StaticResource VignettePanelStyle}">
                        <StackPanel>
                            <Border Style="{StaticResource VignetteRibbonStyle}">
                                <TextBlock Text="ESTADÍSTICAS" Foreground="#FFFFFF" FontFamily="Impact" FontSize="14"/>
                            </Border>
                            <Button Style="{StaticResource ComicButtonStyle}"
                                    Background="#FFF59E0B" BorderBrush="#FFDB8A00" Foreground="White"
                                    Click="OpenComicStats_Click" HorizontalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="📈" FontSize="18" Margin="0,0,6,0"/>
                                    <TextBlock Text="MI PROGRESO"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>
                </UniformGrid>
            </StackPanel>

            <!-- Estado Vacío (limpio) -->
            <Border Grid.Row="1" Name="EmptyStatePanel" HorizontalAlignment="Center" Margin="0,24,0,32" Padding="20"
                    Visibility="{Binding HasAnyContinueItems, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <StackPanel HorizontalAlignment="Center" MaxWidth="520">
                    <TextBlock Text="Sin lecturas para continuar" FontFamily="Segoe UI" FontSize="20" FontWeight="SemiBold" Foreground="#FFFFFF" TextAlignment="Center"/>
                    <TextBlock Text="Abre un archivo y aparecerá en Seguir leyendo." FontFamily="Segoe UI" FontSize="13" Foreground="#D1D5DB" TextAlignment="Center" Margin="0,6,0,16"/>
                </StackPanel>
            </Border>

            <!-- Explorador de Carpeta (visible cuando hay carpeta seleccionada) -->
            <Border Grid.Row="1" Margin="0,0,0,18" Visibility="{Binding CurrentFolderPath, Converter={StaticResource NullToCollapsedConverter}}">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource RecentsSectionContainer}">
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Toolbar de carpeta -->
                    <DockPanel Grid.Row="0" LastChildFill="False" Margin="8,2,8,10">
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Center">
                            <Button Style="{StaticResource GhostIconButton}" Click="BackToHome_Click" ToolTip="Cerrar carpeta">
                                <TextBlock Text="⟵" FontSize="14"/>
                            </Button>
                            <Button Style="{StaticResource GhostIconButton}" Click="UpFolder_Click" ToolTip="Subir un nivel" Margin="6,0,0,0">
                                <TextBlock Text="⬆" FontSize="14"/>
                            </Button>
                            <TextBlock Text="Carpeta:" Foreground="#E6ECF8" Margin="10,0,6,0" VerticalAlignment="Center"/>
                            <Border Background="#0E1729" BorderBrush="#263146" BorderThickness="1" CornerRadius="6" Padding="8,4">
                                <TextBlock Text="{Binding CurrentFolderPath}" Foreground="#FFFFFF" FontFamily="Consolas" FontSize="12"/>
                            </Border>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center">
                            <Button Style="{StaticResource RecentsButton}" Click="OpenCurrentFolderExternal_Click">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="🗁" Margin="0,0,6,0"/>
                                    <TextBlock Text="Abrir en Explorer"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </DockPanel>

                    <!-- Grid de contenidos -->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding FolderContents}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Width="200" Margin="8,6" Background="#101827" CornerRadius="10" Cursor="Hand"
                                            MouseLeftButtonUp="OpenFolderItem_Click">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="8" ShadowDepth="1" Opacity="0.08"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="160"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <!-- Miniatura o icono -->
                                            <Grid Grid.Row="0" Background="#0B1326" ClipToBounds="True">
                                                <Image Source="{Binding Thumbnail}" Stretch="UniformToFill"/>
                                                <TextBlock Text="📁" FontSize="48" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsFolder, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                <TextBlock Text="📘" FontSize="42" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsFolder, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
                                            </Grid>
                                            <!-- Nombre -->
                                            <TextBlock Grid.Row="1" Text="{Binding Name}" Foreground="#FFFFFF" FontWeight="SemiBold" Margin="8,8,8,0" TextTrimming="CharacterEllipsis"/>
                                            <!-- Detalle -->
                                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="8,6,8,8">
                                                <TextBlock Text="{Binding Extension}" Foreground="#9FB0C8" Visibility="{Binding IsFolder, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
                                                <TextBlock Text="{Binding Size}" Foreground="#9FB0C8" Margin="8,0,0,0" Visibility="{Binding IsFolder, Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
                                                <TextBlock Text="{Binding ComicCount}" Foreground="#9FB0C8" Visibility="{Binding IsFolder, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                <TextBlock Text=" comics" Foreground="#9FB0C8" Visibility="{Binding IsFolder, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.Style>
                                <Style TargetType="ItemsControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding FolderContents.Count}" Value="0">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ItemsControl">
                                                        <Grid>
                                                            <TextBlock Text="Esta carpeta está vacía." Foreground="#9FB0C8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Style>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>

            <!-- Sección Seguir leyendo con fondo propio -->
            <Border Grid.Row="2" Margin="0,6,0,20">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource RecentsSectionContainer}">
                        <!-- Mostrar la sección si hay elementos en Seguir leyendo O en Completados -->
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasAnyContinueItems}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Barra de herramientas de Recientes (limpia, con lo esencial) -->
                    <DockPanel Grid.Row="0" LastChildFill="False" Margin="12,8,12,6">
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="Seguir leyendo" x:Name="MainSectionTitle" FontFamily="Segoe UI Semibold" FontSize="16" FontWeight="SemiBold" Foreground="#FFFFFF" VerticalAlignment="Center"/>
                            <Border Background="#1FFFFFFF" CornerRadius="10" Padding="8,3" Margin="10,0,0,0" BorderBrush="#28FFFFFF" BorderThickness="1">
                                <TextBlock Text="{Binding RecentComics.Count}" Foreground="#FFFFFF" FontFamily="Consolas" FontSize="12"/>
                            </Border>
                            <!-- Pestañas -->
                            <StackPanel Orientation="Horizontal" Margin="12,0,0,0" VerticalAlignment="Center">
                                <ToggleButton x:Name="TabContinue" IsChecked="True" Click="TabContinue_Click" Style="{StaticResource ChipToggleButton}">
                                    <TextBlock Text="Seguir leyendo" />
                                </ToggleButton>
                                <ToggleButton x:Name="TabCompleted" IsChecked="False" Click="TabCompleted_Click" Style="{StaticResource ChipToggleButton}" Margin="6,0,0,0">
                                    <TextBlock Text="Completados" />
                                </ToggleButton>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center">
                            <!-- Ordenar -->
                            <StackPanel Orientation="Horizontal" Margin="6,0" VerticalAlignment="Center" Visibility="{Binding HasRecentComics, Converter={StaticResource BoolToVisibilityConverter}}">
                                <TextBlock Text="Ordenar:" Foreground="#9FB0C8" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                <ComboBox Width="140" SelectedValuePath="Content" SelectedValue="{Binding SortBy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="Reciente"/>
                                    <ComboBoxItem Content="Progreso"/>
                                    <ComboBoxItem Content="Nombre"/>
                                </ComboBox>
                            </StackPanel>
                            <!-- Ocultar completados -->
                            <CheckBox Content="Ocultar terminados" IsChecked="{Binding HideCompleted, Mode=TwoWay}"
                                      Foreground="#E6ECF8" VerticalAlignment="Center" Margin="8,0"/>
                            <!-- Alternar vista (opcional) -->
                            <Button Style="{StaticResource GhostIconButton}" Click="ToggleRecentView_Click" ToolTip="Alternar vista">
                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="☰"/>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRecentListView}" Value="True">
                                                    <Setter Property="Text" Value="▦"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Button>
                            <!-- Paginación compacta -->
                            <StackPanel Orientation="Horizontal" Margin="6,0" VerticalAlignment="Center" Visibility="{Binding HasMultiplePages, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Button Style="{StaticResource GhostIconButton}" Click="PrevRecentPage_Click" ToolTip="Anterior">
                                    <TextBlock Text="◀" FontSize="12"/>
                                </Button>
                                <Border Background="#101827" CornerRadius="12" Padding="10,2" Margin="4,0">
                                    <TextBlock Text="{Binding CurrentPage}" Foreground="#FFFFFF" FontFamily="Consolas" FontSize="12"/>
                                </Border>
                                <TextBlock Text="/" Foreground="#9FB0C8" Margin="2,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding TotalPages}" Foreground="#E6ECF8" FontFamily="Consolas" FontSize="12" VerticalAlignment="Center"/>
                                <Button Style="{StaticResource GhostIconButton}" Click="NextRecentPage_Click" ToolTip="Siguiente" Margin="4,0,0,0">
                                    <TextBlock Text="▶" FontSize="12"/>
                                </Button>
                            </StackPanel>
                            <!-- Acciones -->
                            <Button Style="{StaticResource TextDangerButton}" Click="ClearRecentComics_Click">
                                <TextBlock Text="Limpiar lista"/>
                            </Button>
                            <Border Background="#0E1729" CornerRadius="8" Padding="8,4" Margin="12,0" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Completados:" Foreground="#9FB0C8" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding CompletedCount}" Foreground="#FFFFFF" FontFamily="Consolas"/>
                                </StackPanel>
                            </Border>
                            <Button Style="{StaticResource TextDangerButton}" Click="ClearCompleted_Click" ToolTip="Limpiar completados">
                                <TextBlock Text="Limpiar completados"/>
                            </Button>
                        </StackPanel>
                    </DockPanel>
                    

                    <ScrollViewer Grid.Row="1" Name="ComicsScrollViewer" HorizontalScrollBarVisibility="Disabled" Padding="12,0">
                        <ScrollViewer.Style>
                            <Style TargetType="ScrollViewer">
                                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                <Style.Triggers>
                                    <!-- Desactivar scroll vertical cuando no está la vista lista -->
                                    <DataTrigger Binding="{Binding IsRecentListView}" Value="False">
                                        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ScrollViewer.Style>
                        <Grid>
                            <!-- Carrusel horizontal tipo Netflix -->
                            <Grid Name="ContinueCarouselRoot" Visibility="{Binding IsRecentListView, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                                <Grid>
                                    <ScrollViewer x:Name="ContinueCarouselScroll" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" CanContentScroll="True">
                                        <ItemsControl ItemsSource="{Binding RecentComics}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Width="200" Margin="8,6" Cursor="Hand" Background="#101827" CornerRadius="10" MouseLeftButtonUp="OpenRecentComic_Click">
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Leer" Command="{Binding DataContext.OpenComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding FilePath}"/>
                                                                <MenuItem Header="Mostrar en carpeta" Command="{Binding DataContext.ShowInFolderCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding FilePath}"/>
                                                                <Separator/>
                                                                <MenuItem Header="Quitar de la lista" Command="{Binding DataContext.RemoveRecentComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding FilePath}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                        <Border.Effect>
                                                            <DropShadowEffect BlurRadius="10" ShadowDepth="2" Opacity="0.10"/>
                                                        </Border.Effect>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <!-- Portada con overlay -->
                                                            <Grid Grid.Row="0" Height="280" ClipToBounds="True">
                                                                <Image Source="{Binding CoverThumbnail}" Stretch="UniformToFill"/>
                                                                <Border Name="LoadingBorder" Background="#66000000" Visibility="Collapsed">
                                                                    <TextBlock Text="Cargando…" Foreground="White" FontFamily="Segoe UI" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                                <Rectangle VerticalAlignment="Bottom" Height="120">
                                                                    <Rectangle.Fill>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <GradientStop Color="#00000000" Offset="0"/>
                                                                            <GradientStop Color="#CC000000" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Rectangle.Fill>
                                                                </Rectangle>
                                                                <!-- Botón de quitar (esquina superior derecha) -->
                                                                <Button x:Name="RemoveCardButton" Style="{StaticResource GhostIconButton}"
                                                                        Background="#EF4444" BorderBrush="#FFFFFF" Foreground="#FFFFFF"
                                                                        BorderThickness="1" Width="36" Height="36" Opacity="0.95"
                                                                        ToolTip="Quitar de la lista"
                                                                        Command="{Binding DataContext.RemoveRecentComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                        CommandParameter="{Binding FilePath}"
                                                                        HorizontalAlignment="Right" VerticalAlignment="Top" Margin="8">
                                                                    <Button.Effect>
                                                                        <DropShadowEffect BlurRadius="8" ShadowDepth="2" Opacity="0.4"/>
                                                                    </Button.Effect>
                                                                    <TextBlock Text="✖" FontSize="16" FontWeight="Bold"/>
                                                                </Button>

                                                                <Button Background="#44000000" BorderBrush="#55FFFFFF" BorderThickness="1" Width="110" Height="30" Cursor="Hand"
                                                                        Command="{Binding DataContext.OpenComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                        CommandParameter="{Binding FilePath}"
                                                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                    <TextBlock Text="Continuar" Foreground="#FFFFFF" FontWeight="SemiBold"/>
                                                                </Button>
                                                            </Grid>
                                                            <!-- Título + progreso -->
                                                            <StackPanel Grid.Row="1" Margin="8,8,8,10">
                                                                <TextBlock Text="{Binding DisplayName}" Foreground="#FFFFFF" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"/>
                                                                <ProgressBar Minimum="0" Maximum="100" Value="{Binding ProgressPercent, Mode=OneWay}" Height="6" Margin="0,6,0,0" Background="#233044" Foreground="#3B82F6"/>
                                                            </StackPanel>
                                                        </Grid>
                                                        <Border.RenderTransform>
                                                            <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                                                        </Border.RenderTransform>
                                                        <Border.Triggers>
                                                            <EventTrigger RoutedEvent="MouseEnter">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.03" Duration="0:0:0.08"/>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.03" Duration="0:0:0.08"/>
                                                                        <DoubleAnimation Storyboard.TargetName="RemoveCardButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.06"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.08"/>
                                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.08"/>
                                                                        <DoubleAnimation Storyboard.TargetName="RemoveCardButton" Storyboard.TargetProperty="Opacity" To="0.9" Duration="0:0:0.06"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Border.Triggers>
                                                    </Border>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding CoverThumbnail}" Value="{x:Null}">
                                                            <Setter TargetName="LoadingBorder" Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>
                                    <!-- Flechas de navegación del carrusel -->
                                    <!-- Usar márgenes y comportamiento igual que el carrusel de Completados: centrar verticalmente y que solo los botones sean hit-testables -->
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" IsHitTestVisible="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0" Style="{StaticResource CarouselNavButton}" Click="ContinueCarouselPrev_Click" Margin="6,0" VerticalAlignment="Center" IsHitTestVisible="True">
                                            <TextBlock Text="◀" FontSize="16"/>
                                        </Button>
                                        <Button Grid.Column="2" Style="{StaticResource CarouselNavButton}" Click="ContinueCarouselNext_Click" Margin="6,0" VerticalAlignment="Center" IsHitTestVisible="True">
                                            <TextBlock Text="▶" FontSize="16"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <!-- Panel de Completados (carrusel horizontal, portadas completas) -->
                            <Grid x:Name="CompletedPanel" Visibility="Collapsed" Opacity="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Flecha izquierda -->
                                    <Button Grid.Column="0" Style="{StaticResource CarouselNavButton}" Click="CompletedCarouselPrev_Click" Margin="6,0" VerticalAlignment="Center">
                                        <TextBlock Text="◀" FontSize="18"/>
                                    </Button>

                                    <!-- Carrusel (scroll horizontal) -->
                                    <ScrollViewer x:Name="CompletedScrollViewer" Grid.Column="1" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" CanContentScroll="True">
                                        <ItemsControl x:Name="CompletedItemsControl" ItemsSource="{Binding CompletedComics}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <!-- Portada completa estilo tarjeta vertical -->
                                                    <Border Width="220" Margin="12" Cursor="Hand" Background="#0F1724" CornerRadius="10" Height="380">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <!-- Imagen: mostrar portada completa, mantener aspecto -->
                                                            <Border Grid.Row="0" CornerRadius="8" Margin="8" Background="#0B1326" ClipToBounds="True">
                                                                <Image Source="{Binding CoverThumbnail}" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                            </Border>
                                                            <!-- Pie info -->
                                                            <StackPanel Grid.Row="1" Margin="8" Orientation="Vertical">
                                                                <TextBlock Text="{Binding DisplayName}" Foreground="#FFFFFF" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"/>
                                                                <TextBlock Text="{Binding DateCompleted, StringFormat={}{0:dd/MM/yyyy}}" Foreground="#9FB0C8" FontSize="12"/>
                                                                <ProgressBar Minimum="0" Maximum="100" Value="100" Height="6" Margin="0,6,0,0" Background="#233044" Foreground="#10B981"/>
                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,6,0,0">
                                                                    <Button Style="{StaticResource RecentsPrimaryButton}" Padding="8,4" Margin="0,0,6,0"
                                                                            Command="{Binding DataContext.ReopenCompletedCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                            CommandParameter="{Binding FilePath}">
                                                                        <TextBlock Text="Releer"/>
                                                                    </Button>
                                                                    <Button Style="{StaticResource TextActionButton}" Click="CompletedMenu_Click" Tag="{Binding FilePath}">⋯</Button>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </ScrollViewer>

                                    <!-- Flecha derecha -->
                                    <Button Grid.Column="2" Style="{StaticResource CarouselNavButton}" Click="CompletedCarouselNext_Click" Margin="6,0" VerticalAlignment="Center">
                                        <TextBlock Text="▶" FontSize="18"/>
                                    </Button>
                                </Grid>
                            </Grid>
                            <!-- Vista Lista -->
                            <ListView Name="RecentComicsListView" BorderThickness="0" Background="Transparent" ItemContainerStyle="{StaticResource RecentsListViewItemStyle}"
                                      Visibility="{Binding IsRecentListView, Converter={StaticResource BoolToVisibilityConverter}}"
                                      ItemsSource="{Binding RecentComics, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                      Loaded="RecentComicsListView_Loaded"
                                      MouseDoubleClick="RecentComicsListView_MouseDoubleClick">
                                <ListView.Resources>
                                    <!-- Encabezado del GridView: barra más visible/contrastada -->
                                    <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource RecentsGridHeader}">
                                        <Setter Property="Background" Value="#0E1729"/>
                                        <Setter Property="Foreground" Value="#FFFFFF"/>
                                        <Setter Property="BorderBrush" Value="#263146"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                                        <Setter Property="FontSize" Value="12"/>
                                    </Style>
                                </ListView.Resources>
                                <ListView.View>
                                    <GridView AllowsColumnReorder="true">
                                        <GridViewColumn x:Name="colCover" Header="Portada" Width="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <!-- Enmascarar el fondo de selección bajo la portada para que no se vea la barra -->
                                                    <Border Background="{StaticResource RecentsPanelBackgroundBrush}" Padding="0" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                                        <Image Source="{Binding CoverThumbnail}" Width="60" Height="60" Stretch="UniformToFill"/>
                                                    </Border>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="colTitle" Header="Nombre" Width="240" DisplayMemberBinding="{Binding DisplayName}"/>
                                        <GridViewColumn x:Name="colPath" Header="Ubicación" Width="400">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding FilePath}" TextTrimming="CharacterEllipsis"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="colLastOpened" Header="Última apertura" Width="160">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding LastOpened, StringFormat={}{0:dd/MM/yyyy HH:mm}}"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn x:Name="colPage" Header="Página" Width="80" DisplayMemberBinding="{Binding LastPage}"/>
                                        <!-- Acciones por elemento -->
                                        <GridViewColumn x:Name="colActions" Width="170">
                                            <GridViewColumn.Header>
                                                <TextBlock Text=""/>
                                            </GridViewColumn.Header>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                        <Button Style="{StaticResource RecentsPrimaryButton}" Padding="8,2" Margin="0,0,6,0"
                                                                Command="{Binding DataContext.OpenComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                CommandParameter="{Binding FilePath}" ToolTip="Leer">
                                                            <TextBlock Text="Leer"/>
                                                        </Button>
                                                        <Button Style="{StaticResource TextDangerButton}" Padding="6,2" Margin="0"
                                                                Command="{Binding DataContext.RemoveRecentComicCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                CommandParameter="{Binding FilePath}" ToolTip="Quitar de la lista">
                                                            <TextBlock Text="Quitar"/>
                                                        </Button>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>