<Window x:Class="ComicReader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:ComicReader.Views"
    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:models="clr-namespace:ComicReader.Models"
        xmlns:services="clr-namespace:ComicReader.Services"
        mc:Ignorable="d"
        Title="{Binding Title, RelativeSource={RelativeSource Self}}"
        Background="{DynamicResource WindowBackgroundBrush}"
    Icon="icono.ico"
    WindowStyle="None" AllowsTransparency="False" ResizeMode="CanResize"
    AllowDrop="True"
    Closing="MainWindow_Closing"
    StateChanged="Window_StateChanged">

    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="40"
                            ResizeBorderThickness="6"
                            GlassFrameThickness="0"
                            CornerRadius="0"
                            UseAeroCaptionButtons="False" />
    </shell:WindowChrome.WindowChrome>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Barra de Título Personalizada (sin Effect para compatibilidad) -->
    <Border Grid.Row="0" x:Name="CustomTitleBar" 
                Background="{DynamicResource HeaderBackgroundBrush}" 
                MouseLeftButtonDown="DragWindow_MouseLeftButtonDown"
                Height="40">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="15,0">
                    <TextBlock Text="📚 Percy's Library" 
                               Style="{DynamicResource AppTitleTextStyle}" 
                               FontSize="20" 
                               Foreground="{DynamicResource AccentColorBrush}" 
                               VerticalAlignment="Center"/>
                </StackPanel>

        <!-- Botones del encabezado removidos por solicitud -->

        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right"
                shell:WindowChrome.IsHitTestVisibleInChrome="True">
            <Button Content="📖" ToolTip="Entrar al modo lectura" Click="EnterReadingMode_Click" Style="{StaticResource WindowControlButton}"
                shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button Content="⚙" ToolTip="Configuración" Click="OpenSettingsDialog_Click" Style="{StaticResource WindowControlButton}"
                shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button Content="─" Click="Minimize_Click" Style="{StaticResource WindowControlButton}"
                shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
            <Button x:Name="MaxRestoreButton"
                    Click="MaximizeRestore_Click"
                    shell:WindowChrome.IsHitTestVisibleInChrome="True">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource WindowControlButton}">
                        <!-- Segoe MDL2 Assets: Maximize = E922, Restore = E923 -->
                        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                        <Setter Property="Content" Value="&#xE922;"/>
                        <Setter Property="ToolTip" Value="Maximizar"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                <!-- Icono de restaurar (dos cuadros superpuestos) MDL2 = E923 -->
                                <Setter Property="Content" Value="&#xE923;"/>
                                <Setter Property="ToolTip" Value="Restaurar"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="✕" Click="Close_Click" Style="{StaticResource WindowControlButton}"
                shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Área de Contenido Principal -->
    <!-- Barra superior de controles del lector -->
    <Border Grid.Row="1" x:Name="ReaderTopBar"
            Background="{DynamicResource HeaderBackgroundBrush}"
            Padding="8" Panel.ZIndex="1000"
            IsEnabled="{Binding IsReaderViewActive, RelativeSource={RelativeSource AncestorType=Window}}">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsReaderViewActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <!-- Ocultar explícitamente si estamos en Home o en Configuración -->
                    <DataTrigger Binding="{Binding IsHomeViewActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSettingsViewActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <DockPanel>
            <!-- Izquierda: navegación -->
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Center">
                <Button Content="🏠" ToolTip="Inicio" Click="HomeButton_Click" Style="{StaticResource SecondaryButtonStyle}" Margin="2,0"/>
                <Button Content="📂" ToolTip="Abrir cómic (Ctrl+O)" Click="OpenFile_Click" Style="{StaticResource PrimaryButtonStyle}" Margin="2,0"/>
                <Button Content="⟨" ToolTip="Anterior" Click="PrevPage_Click" Style="{StaticResource PrimaryButtonStyle}" Margin="2,0"/>
                <Button Content="⟩" ToolTip="Siguiente" Click="NextPage_Click" Style="{StaticResource PrimaryButtonStyle}" Margin="2,0"/>
            </StackPanel>
            <!-- Centro: indicador + slider -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Pág" Foreground="#ccc" Margin="0,0,6,0" VerticalAlignment="Center"/>
                <TextBlock x:Name="PageIndicator" Text="— / —" Foreground="White" FontWeight="Bold" VerticalAlignment="Center"/>
                <Slider x:Name="PageSlider" Width="220" Minimum="1" Maximum="1" Value="1" TickFrequency="1" IsSnapToTickEnabled="True" ValueChanged="PageSlider_ValueChanged" Margin="12,0,0,0"/>
            </StackPanel>
            <!-- Derecha: zoom y utilidades -->
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button Content="－" ToolTip="Zoom Out" Click="ZoomOut_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                <Button Content="100%" ToolTip="Restablecer" Click="Zoom100_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                <Button Content="＋" ToolTip="Zoom In" Click="ZoomIn_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                <Separator Width="10" Background="Transparent"/>
                <Button Content="⟳" ToolTip="Rotar" Click="Rotate_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                <Separator Width="10" Background="Transparent"/>
                    <Button Content="☰" ToolTip="Miniaturas" Click="ToggleThumbnails_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                    <Button Content="⚙" ToolTip="Opciones de lectura" Click="ToggleReadingQuickPanel_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                <Button Content="☾" ToolTip="Modo Nocturno" Click="ToggleNightMode_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
                <Button Content="⛶" ToolTip="Pantalla Completa Total" Click="ImmersiveFullScreen_Click" Style="{StaticResource ComicButtonStyle}" Margin="2,0"/>
            </StackPanel>
        </DockPanel>
    </Border>

    <!-- Contenido principal con panel de miniaturas -->
    <Grid Grid.Row="2">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="ThumbCol" Width="0"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Panel lateral de miniaturas (sin ScrollViewer externo para mantener virtualización) -->
        <Border x:Name="ThumbPanel" Grid.Column="0" Width="240" Background="#1E1E1E" Visibility="Collapsed">
            <ListBox x:Name="ThumbList"
                     BorderThickness="0"
                     Background="Transparent"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.CanContentScroll="True"
                     VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.VirtualizationMode="Recycling"
                     SelectionChanged="ThumbList_SelectionChanged">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Margin="8" Background="#2A2A2A" CornerRadius="6" Padding="6">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Image Source="{Binding Thumbnail}" Stretch="Uniform" Height="140"/>
                                <TextBlock Grid.Row="1" Text="{Binding PageNumber}" Foreground="#DDD" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Border>

        <!-- Área de contenido -->
        <Grid Grid.Column="1" x:Name="MainContentGrid" ClipToBounds="True">
            <ContentControl x:Name="MainContentArea" Content="{Binding CurrentView}"/>
            <!-- Overlay host para paneles flotantes (ej. ReadingQuickPanel) -->
            <ContentControl x:Name="ReadingQuickOverlayHost" HorizontalAlignment="Right" VerticalAlignment="Top"
                            Margin="12" Visibility="Collapsed"/>
        </Grid>
    </Grid>

        
    </Grid>
</Window>